{
  "name": "problem-solving",
  "version": "1.0.0",
  "description": "JS solutions to the various algorithms and problem solving questions",
  "main": "index.js",
  "scripts": {
    "watch": "webpack --progress --watch",
    "start": "webpack-dev-server --port 9090 --open",
    "build": "./node_modules/.bin/eslint src/**/*.js --fix --ignore-path .eslintignore &&  webpack -p",
    "test": "jest",
    "testwatch": "./node_modules/.bin/eslint src/**/*.js --fix --ignore-path .eslintignore && jest --watch"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/markandan/problem-solving.git"
  },
  "keywords": [
    "problem-solving"
  ],
  "author": "Markandan",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/markandan/problem-solving/issues"
  },
  "homepage": "https://github.com/markandan/problem-solving#readme",
  "babel": {
    "presets": [
      "env",
      "stage-3"
    ]
  },
  "devDependencies": {
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.2.2",
    "babel-loader": "^7.1.4",
    "babel-preset-env": "^1.6.1",
    "babel-preset-stage-3": "^6.24.1",
    "clean-webpack-plugin": "^0.1.19",
    "css-loader": "^0.28.11",
    "eslint": "^4.19.1",
    "eslint-plugin-import": "^2.10.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-config-airbnb-base": "^12.1.0",
    "html-webpack-plugin": "^3.1.0",
    "jest": "^22.4.3",
    "sass-loader": "^6.0.7",
    "style-loader": "^0.20.3",
    "webpack": "^4.4.1",
    "webpack-cli": "^2.0.13",
    "webpack-dev-server": "^3.1.1"
  },
  "dependencies": {
    "babel-polyfill": "^6.26.0"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "\\.(css|less|scss)$": "<rootDir>/__mocks__/styleMock.js"
    },
    "verbose": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "<rootDir>/build/",
      "<rootDir>/node_modules/",
      "<rootDir>/src/index.js"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 90,
        "functions": 90,
        "lines": 90,
        "statements": 90
      }
    }
  }
}
